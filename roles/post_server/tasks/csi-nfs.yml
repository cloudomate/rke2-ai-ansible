---
- name: Create manifests directory for temp configuration
  ansible.builtin.file:
    path: /tmp/rke2
    state: directory
    owner: "{{ ansible_user_id }}"
    mode: "0755"
  run_once: true

- name: Copy manifest for csi nfs to first master
  ansible.builtin.template:
    src: csi-nfs.yml.j2
    dest: /tmp/rke2/csi-nfs.yml
    owner: "{{ ansible_user_id }}"
    mode: "0755"
  run_once: true

- name: Install csi driver for nfs
  ansible.builtin.command: >
    {{ rke2_kubectl_binary | default('/var/lib/rancher/rke2/bin/kubectl') }} 
    --kubeconfig {{kubeconfig_path}} apply -f /tmp/rke2/csi-nfs.yml
  run_once: true
  become: true

# wait for deployment 
- name: Wait for csi driver for nfs csi storage class to be registered
  ansible.builtin.command: >
    {{ rke2_kubectl_binary | default('/var/lib/rancher/rke2/bin/kubectl') }} 
    --kubeconfig {{kubeconfig_path}} 
    get storageclass {{ csi_nfs.storage_class_name }} --no-headers
  become: true
  register: storageclass_result
  retries: 10
  delay: 10
  until: storageclass_result.rc == 0
  changed_when: false


# modify the to make it default class
- name: Make {{ csi_nfs.storage_class_name }} as default class
  ansible.builtin.command: >
      {{ rke2_kubectl_binary }} --kubeconfig {{ kubeconfig_path }} patch storageclass {{ csi_nfs.storage_class_name }}
      -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
  register: result
  become: true
  changed_when: "'patched' in result.stdout"
  failed_when: 
    - result.rc != 0 
    - '"already" not in result.stderr'