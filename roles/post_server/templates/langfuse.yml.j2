---
apiVersion: v1
kind: Namespace
metadata:
  name: langfuse
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: langfuse
  namespace: langfuse
stringData:
  salt: {{ langfuse.salt }}
  encryption-key: {{ langfuse.encryption_key }}
  nextauth-secret: {{ langfuse.nextauth_secret }}
  postgresql-password: {{ langfuse.postgresql_password }}
  clickhouse-password: {{ langfuse.clickhouse_password }}
  redis-password: {{ langfuse.redis_password }}
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: langfuse
  namespace: langfuse
spec:
  repo: https://langfuse.github.io/langfuse-k8s
  chart: langfuse
  createNamespace: false
  version: {{ langfuse.chart_version }}
  valuesContent: |-
    langfuse:
      salt:
        secretKeyRef:
          name: langfuse
          key: salt
      
      encryptionKey:
        secretKeyRef:
          name: langfuse
          key: encryption-key

      nextauth:
        secret:
          secretKeyRef:
            name: langfuse
            key: nextauth-secret
            
{% if langfuse.ingress.enabled %}     
      ingress:
        enabled: {{ langfuse.ingress.enabled }}
        additionalLabels: {}
        className: "{{ ingress.className }}"
        annotations:
{% if cert_manager.letsencrypt.enabled %}
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
# to handle acme challenge
{% if ingress.className=="nginx" | bool %}
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false" 
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
{% endif %}
{% endif %}
        hosts:
          - host: "langfuse.{{ app.domain }}"
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls:
{% if langfuse.ingress.tls.enabled %}
          enabled: true
{% if cert_manager.letsencrypt.use_wildcard %}
          secretName: "wildcard-{{ app.name }}-tls"  # Use existing wildcard cert
{% else %}
          secretName: "langfuse-{{ app.name }}-tls"  # Use cert created by Certificate resource
{% endif %}
{% else %}
          enabled: false
{% endif %}
{% endif %}
    postgresql:
       auth:
        existingSecret: langfuse
        secretKeys:
          adminPasswordKey: postgresql-password
          userPasswordKey: postgresql-password
          
    clickhouse:
      zookeeper:
        replicaCount: {{ langfuse.clickhouse.zookeeper.replicaCount | default(3) }}
      replicaCount: {{ langfuse.clickhouse.replicaCount | default(3) }}
      auth:
        existingSecret: langfuse
        existingSecretKey: clickhouse-password

    redis:
      auth:
        existingSecret: langfuse
        existingSecretPasswordKey: redis-password